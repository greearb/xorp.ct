# Copyright (c) 2009-2011 XORP, Inc and Others
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, Version 2, June
# 1991 as published by the Free Software Foundation. Redistribution
# and/or modification of this program under the terms of any other
# version of the GNU General Public License is not permitted.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. For more details,
# see the GNU General Public License, Version 2, a copy of which can be
# found in the XORP LICENSE.gpl file.
#
# XORP Inc, 2953 Bunker Hill Lane, Suite 204, Santa Clara, CA 95054, USA;
# http://xorp.net


import os
Import('env')

env = env.Clone()

is_shared = 'SHAREDLIBS' in env

env.AppendUnique(CPPPATH = [
    '#',
    '$BUILDDIR',
     ])

env.AppendUnique(LIBPATH = [
    '$BUILDDIR/libxorp',
    '$BUILDDIR/libcomm',
    '$BUILDDIR/libxipc',
    '$BUILDDIR/libproto',
    '$BUILDDIR/xrl/interfaces',
    '$BUILDDIR/xrl/targets',
    '.',
    ])

env.AppendUnique(LIBS = [
    'xif_cli_processor',
    'xorp_ipc',
    'xorp_core',
    'xorp_proto',
    'xorp_comm',
    ])

if ('mingw' in env and env['mingw']):
    env.AppendUnique(LIBS = [ 'winmm' ])

if not is_shared:
    if not ('mingw' in env and env['mingw']):
        env.AppendUnique(LIBS = [
            "rt",
        ])

    env.AppendUnique(LIBS = [
        "crypto",
        ])

if ('mingw' in env and env['mingw']):
    env.AppendUnique(LIBS = [
        'ws2_32',
        'iphlpapi',
        'winmm',
        ])
    env.Append(LIBS = [
        'xorp_core',
        ])

    
env.Replace(RPATH = [
    env.Literal(env['xorp_tool_rpath'])
    ])


cligensrcs = [
	'cli_generic.cc'
    ]

sendclisrcs = [
	'send_cli_processor_xrl.cc'
    ]

cligen = env.Program(target = 'cli_generic', source = cligensrcs)
sendcli = env.Program(target = 'cli_send_processor_xrl', source = sendclisrcs)
if env['enable_builddirrun']:
    for obj in cligen:
        env.AddPostAction(cligen,
            env.Copy(obj.abspath,
                        os.path.join(env['xorp_alias_tooldir'], str(obj))))
    for obj in sendcli:
        env.AddPostAction(sendcli,
            env.Copy(obj.abspath,
                        os.path.join(env['xorp_alias_tooldir'], str(obj))))
env.Alias('install', env.InstallProgram(env['xorp_tooldir'], cligen))
env.Alias('install', env.InstallProgram(env['xorp_tooldir'], sendcli))

Default(cligen, sendcli)
